---
- hosts: localhost
  connection: local
  tasks:
    - name: Prepare the Host for IDR Client installation
      block:
        - name: Install application dependencies
          ansible.builtin.apt:
            name:
              - cron
            state: present
            update_cache: no

        - name: Add application user group
          ansible.builtin.group:
            name: "{{ app_user_group }}"
            state: present
            system: yes

        - name: Add application user
          ansible.builtin.user:
            comment: Custom user for running idr related tasks.
            group: "{{ app_user_group }}"
            name: "{{ app_user }}"
            shell: /bin/bash
            state: present
            system: yes

        - name: Create essential directories for the application
          ansible.builtin.file:
            group: "{{ app_user_group }}"
            mode: "{{ item.mode }}"  
            owner: root
            path: "{{ item.dir }}" 
            state: directory
          loop:
            - { dir: "{{ app_config_dir }}", mode: "ug=rwx,o=rx,g+s" }
            - { dir: "{{ app_logs_dir }}", mode: "a=rwx,g+s" }  # Make the logs directory world writable allowing any user to run the application.
      become: yes

    - name: Check for new application versions
      block:
        - name: Get latest application version data
          ansible.builtin.uri:
            follow_redirects: safe
            force: yes
            headers:
              Accept: application/json
            method: GET
            return_content: yes
            status_code: 200
            url: "{{ app_download_url }}"
          register: app_version_data_response
          retries: 5
          until: app_version_data_response.status == 200

        - name: Get installed application version
          ansible.builtin.slurp:
            src: "{{ app_config_dir }}/app_version_data.json"
          become: yes
          ignore_errors: true
          register: installed_app_version_content

        - name: Establish app version facts
          ansible.builtin.set_fact:
            cacheable: no
            current_installed_app_version: "{{ 'NONE' if installed_app_version_content is failed else (installed_app_version_content.content | b64decode | from_json)['tag_name'] }}"
            latest_available_app_version: "{{ app_version_data_response.json['tag_name'] }}"
            new_version_download_url: "{{ app_version_data_response.json.assets[0].browser_download_url }}"

        - name: Determine if a new application version is available
          ansible.builtin.set_fact:
            cacheable: no
            new_version_available: "{{ current_installed_app_version != latest_available_app_version }}"

        - name: Show version info
          ansible.builtin.debug:
            msg: The current installed version is '{{ current_installed_app_version }}', latest available version is '{{ latest_available_app_version }}'

    - name: Install application
      block:
        - name: Download latest application version
          ansible.builtin.get_url:
            dest: "{{ app_installation_dir }}/idr_client"
            force: yes
            group: "{{ app_user_group }}"
            owner: root
            mode: "a=rx"
            url: "{{ new_version_download_url }}"
          when: not local_binary_path

        - name: Install latest application version from local path
          ansible.builtin.copy:
            dest: "{{ app_installation_dir }}/idr_client"
            force: yes
            group: "{{ app_user_group }}"
            owner: root
            mode: "a=rx"
            remote_src: no
            src: "{{ local_binary_path }}"
          when: local_binary_path

        - name: Copy script for running the client to the installation directory
          ansible.builtin.template:
            dest: "{{ app_installation_dir }}/run_idr_client"
            force: yes
            group: "{{ app_user_group }}"
            owner: root
            mode: "ug=rwx,o=rx"
            src: run_idr_client.sh

        - name: Remove old style config file if present
          ansible.builtin.file:
            path: "{{ app_config_dir }}/config.yaml"
            state: absent
        
        - name: Copy the application configuration file to the appropriate directory
          ansible.builtin.template:
            backup: yes
            dest: "{{ app_config_dir }}/config.yml"
            force: yes
            group: "{{ app_user_group }}"
            owner: root
            mode: "ug=rw,o=r"
            src: config.yml

        - name: Remove existing cron entries for running the client
          ansible.builtin.cron:
            name: "{{ item }}"
            state: absent
            user: "{{ app_user }}"
          loop:
            - run_idr_client
            - run auto extraction

        - name: Create an hourly cron entry to run the client periodically
          ansible.builtin.cron:
            hour: "{{ hourly_cron_schedule }}"
            job: "{{ cron_sleep_randomizer }} {{ app_installation_dir }}/run_idr_client"
            minute: "0"
            name: run_idr_client
            state: present
            user: "{{ app_user }}"

        - name: Save downloaded app version data
          ansible.builtin.copy:
            backup: no
            content: "{{ app_version_data_response.json | ansible.builtin.to_nice_json }}"
            dest: "{{ app_config_dir }}/app_version_data.json"
            force: yes
            group: "{{ app_user_group }}"
            mode: "ug=rw,o=r"
            owner: root
      become: yes
      when: force_app_download or new_version_available
     
    - name: Add desktop entries
      block:
        - name: Install desktop file utils
          ansible.builtin.apt:
            name:
              - desktop-file-utils
            state: present
            update_cache: no
  
        - name: Add a desktop entry for the application
          ansible.builtin.template:
            dest: "{{ app_desktop_entry_installation_dir }}/idr-client.desktop"
            force: yes
            group: root
            mode: "u=rw,go=r"
            owner: root
            src: idr-client.desktop

        - name: Add an icon for the application
          ansible.builtin.copy:
            dest: "{{ app_icon_installation_dir }}/idr_logo.png"
            force: yes
            group: root
            mode: "u=rw,go=r"
            owner: root
            src: idr_logo.png

        - name: Update desktop entries database
          ansible.builtin.shell:
            cmd: "update-desktop-database {{ app_desktop_entry_installation_dir }}"
      become: yes
      when: do_add_desktop_entries and (force_app_download or new_version_available)

    - name: Post installation tasks
      block:
        - name: Copy post installation script
          ansible.builtin.template:
            backup: no
            dest: "{{ post_installation_script_path }}"
            force: yes
            group: "{{ app_user_group }}"
            owner: root
            mode: "ug=rwx,o=r"
            src: post_installation.sh
      become: yes
      when: do_execute_post_installation_tasks and (force_app_download or new_version_available)
